/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package design;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.InsertData;
import model.LoadTable;
import model.MinMaxData;
import model.TestConnection;
import model.Truncate;

/**
 *
 * @author rachmad
 */
public class FormAnalisaMobil extends javax.swing.JFrame {
    private LoadTable tb;
    private TestConnection tc;
    private DefaultTableModel tm, tm2 = new DefaultTableModel(), tm3;
    private JTable jTable2 = new JTable();
    private String min, max;
    private MinMaxData minMaxData;
    private Object[] columnArray;
    /**
     * Creates new form FormAnalisaMobil
     */
    public FormAnalisaMobil() {
        String query = "SELECT id_mobil, model, transmisi, warna, kapasitas, bahan_bakar, harga, purna_jual FROM utility";
        tc = new TestConnection();
        tb = new LoadTable(tc.getConnection(), query);
        tm = tb.getTableModel();
        
        tm3 = new LoadTable(tc.getConnection(), "SELECT id_mobil, model, transmisi, warna, kapasitas, bahan_bakar, harga, purna_jual from mobil").getTableModel();
//        minMaxData = new MinMaxData(tc.getConnection(), "mobil", "harga");
//        max = minMaxData.getMax();
//        min = minMaxData.getMin();
        
        tm2 = new LoadTable(tc.getConnection(), "select id_mobil, model from mobil").getTableModel();
        columnArray = new Object[]{"nilai model", "nilai transmisi", "nilai warna", "nilai kapasitas", "nilai bahan_bakar", "nilai harga", "nilai purna_jual"};
        for(Object column : columnArray){
            tm2.addColumn(column);
        }
        
        new Truncate("TRUNCATE hasil_analisa");
        for(int i=0; i<tm.getRowCount(); i++){
            List insert = new ArrayList();
            for(int j=0; j<tm2.getColumnCount(); j++){
                if(j >= 2){
                    String value = tm.getValueAt(i, j-1).toString();
                    minMaxData = new MinMaxData(tc.getConnection(), "utility", tm.getColumnName(j-1));
                    max = minMaxData.getMax();
                    min = minMaxData.getMin();
                    double maxVal = Double.parseDouble(max);
                    double minVal = Double.parseDouble(min);
                    double currentVal = Double.parseDouble(value);
                    double result = ((maxVal - currentVal) / (maxVal - minVal));
                    //System.out.println("(" + max + " - " + value + ") / (" + max + " - " + min + ") = " + result);
                    tm2.setValueAt(Double.toString(result * 100) + " %", i, j);
                    insert.add(Double.toString(result * 100));
                }
                else{
                    insert.add(tm2.getValueAt(i,j));
                }
            }
            String table = "hasil_analisa";
            Object[] column = {"id_mobil", "nama_model", "model", "transmisi", "warna", "kapasitas", "bahan_bakar", "harga", "purna_jual"};
            Object[] data = new Object[insert.size()];
            data = insert.toArray();
            new InsertData(tc.getConnection(), table, column, data);
        }
        
//        for(int i=0; i<tm.getRowCount(); i++){
//            List<Object> data = new ArrayList<Object>();
//            for(int j=0; j<tm.getColumnCount(); j++){
//                String value = tm.getValueAt(i, j).toString();
//                if(j==0){
//                    data.add(value);
//                }
//                else{
//                    double maxVal = Double.parseDouble(max);
//                    double minVal = Double.parseDouble(min);
//                    double currentVal = Double.parseDouble(value);
//                    double result = ((maxVal - currentVal) / (maxVal - minVal)) * 100;
//                    data.add(Double.toString(result));
//                }
//            }
//            Object[] dataRow = new Object[data.size()];
//            dataRow = data.toArray(dataRow);
//            tm2.addRow(dataRow);
//        }
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int row, int column) {
                // semua baris dan kolom false
                return false;
            }
        };
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(tm3);
        jScrollPane1.setViewportView(jTable1);

        jTable3.setModel(tm);
        jScrollPane2.setViewportView(jTable3);

        jTable4.setModel(tm2);
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable4MousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable4);

        jLabel1.setText("Data Mobil");

        jLabel2.setText("Table Utility");

        jLabel3.setText("Table Analisa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MousePressed
        JTable table =(JTable) evt.getSource();
        java.awt.Point p = evt.getPoint();
        int selectedRowIndex = jTable4.getSelectedRow();
        //String selectedObject = jTable4.getModel().getValueAt(selectedRowIndex, 2)+"";
        List<Object> columnData = new ArrayList<Object>();
        List<Object> columnName = new ArrayList<Object>();
        for(int i=0; i<jTable3.getModel().getColumnCount(); i++){
            columnData.add(jTable3.getModel().getValueAt(selectedRowIndex, i));
            columnName.add(tm.getColumnName(i));
        }
        if (evt.getClickCount() == 2)
        { 
            String getModelName = tm2.getValueAt(selectedRowIndex, 1).toString();
            new RumusAnalisa(getModelName, columnData, columnName).setVisible(true);
        }
    }//GEN-LAST:event_jTable4MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAnalisaMobil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAnalisaMobil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAnalisaMobil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAnalisaMobil.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAnalisaMobil().setVisible(true);
            }
        });
    }
    
    public DefaultTableModel getTableModel(){
        return tm2;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    // End of variables declaration//GEN-END:variables
}
